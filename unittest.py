# -*- coding: utf-8 -*-
"""unittest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fA7kmpb6vk-eiu5ztDgxCkCNN6Z6eO3i
"""

import unittest
import os

class TestDataProcessor(unittest.TestCase):

  # Check that the file uploaded has the .csv extension
  def test_file_extension(self):
    filename = "/content/drive/MyDrive/cpg_data.csv"
    extension = os.path.splitext(filename)[1]
    self.assertEqual(extension, ".csv")

  # Check that the data is loaded properly
  def test_load_data(self):
    dp = DataProcessor("/content/drive/MyDrive/cpg_data.csv")
    self.assertEqual(dp.df.shape, (1010193, 13))

  # Check that the data is cleaned properly
  def test_clean_data(self):
    dp = DataProcessor("/content/drive/MyDrive/cpg_data.csv")
    dp.clean_data()
    self.assertEqual(dp.df.shape, (862116, 12))

  # Check that the data is pre-processed properly
  def test_pre_processing(self):
    dp = DataProcessor("/content/drive/MyDrive/cpg_data.csv")
    dp.clean_data()
    dp.pre_processing()
    self.assertEqual(dp.cat_df.shape, (862116, 5))
    self.assertEqual(dp.num_df.shape, (862116, 7))
    self.assertEqual(dp.cat_vars, ['Key', 'Customer_ID', 'Category', 'shipment_year', 'shipment_month'])
    self.assertEqual(dp.num_vars, ['Actuals','Cummulative sum','Previous shipment quantity','Frequency','Recency','total_discount','RF_Score'])

  # Check the number of variables going into the analysis
  def test_univariate(self):
    dp = DataProcessor("/content/drive/MyDrive/cpg_data.csv")
    dp.clean_data()
    dp.pre_processing()
    self.assertEqual(dp.df2.shape, (862116, 12))

# Checking all the unit test cases
if __name__ == '__main__':
  s = unittest.TestLoader().loadTestsFromTestCase(TestDataProcessor)
  unittest.TextTestRunner().run(s)